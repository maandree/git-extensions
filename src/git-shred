#!/usr/bin/env bash

files=()
force=0
recursive=0
dashed=0
cached=0
ignore=0
quiet=0

for arg in "$@"; do
    if [ $dashed = 1 ]; then
	files+=( "$arg" )
    elif [ "$arg" = '--' ]; then
	dashed=1
    elif [ "$arg" = '--cached' ]; then
	cached=1
    elif [ "$arg" = '--force' ]; then
        force=1
    elif [ "$arg" = '--ignore-unmatch' ]; then
        ignore=1
    elif [ "$arg" = '--quite' ]; then
        quiet=1
    elif [ "${arg:0:1}" = '-' ];
	if [ "$arg" = '-' ]; then
	    files+=( "$arg" )
	elif [ "${arg:0:2}" = '--' ]; then
	    exit 1
	else
	    i=1
	    while [ ! "${arg:$i:1}" = '' ]; do
		c="${arg:$i:1}"
		if [ "$c" = f ]; then
		    force=1
		elif [ "$c" = r ]; then
		    recursive=1
		elif [ "$c" = q ]; then
		    quite=1
		else
		    exit 1
		fi
	    done
	fi
    else
	files+=( "$arg" )
    fi
done

rm_opts=''
if [ $force = 1 ]; then
    rm_opts="$rm_opts -f"
fi
if [ $recursive = 1 ]; then
    rm_opts="$rm_opts -r"
fi
if [ $quiet = 1 ]; then
    rm_opts="$rm_opts -q"
fi
if [ $cached = 1 ]; then
    rm_opts="$rm_opts --cached"
fi
if [ $ignore = 1 ]; then
    rm_opts="$rm_opts --ignore-unmatch"
fi

shred_opts='--zero'
if [ $force = 1 ]; then
    shred_opts="$shred_opts --force"
fi

for file in "${files[@]}"; do
    (if [ ! -L "$file" ] && [ -d "$file" ]; then
	if [ $recursive = 1 ]; then
	    if [ $quiet = 1 ]; then
		find -mount -- "$file" 2>/dev/null
	    else
		find -mount -- "$file"
	    fi
	fi
    else
        echo "$file"
    fi) | while read f; do
	if [ ! -L "$f" ] && [ ! -d "$f" ]; then
	    if [ $quiet = 1 ]; then
		shred $shred_opts -- "$f" 2>/dev/null
	    else
		shred $shred_opts -- "$f"
	    fi
	fi
    done
    
    git rm $rm_opts -- "$file"
done

